- name: Deploy Nginx main config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf

- name: Deploy bot1 location config
  template:
    src: bot1.locations.j2
    dest: /etc/nginx/conf.d/bot1.locations  

- name: Deploy bot2 location config
  template:
    src: bot2.locations.j2
    dest: /etc/nginx/conf.d/bot2.locations

- name: Deploy bot3 location config
  template:
    src: bot3.locations.j2
    dest: /etc/nginx/conf.d/bot3.locations

- name: Deploy bot4 location config
  template:
    src: bot4.locations.j2
    dest: /etc/nginx/conf.d/bot4.locations

- name: Deploy bot5 location config
  template:
    src: bot5.locations.j2
    dest: /etc/nginx/conf.d/bot5.locations

- name: Deploy bot6 location config
  template:
    src: bot6.locations.j2
    dest: /etc/nginx/conf.d/bot6.locations

- name: Deploy bot7 location config
  template:
    src: bot7.locations.j2
    dest: /etc/nginx/conf.d/bot7.locations

- name: Ensure /etc/pki directory exists
  file:
    path: /etc/pki
    state: directory
    mode: '0755'

- name: Generate self-signed certificate
  community.crypto.openssl_privatekey:
    type: RSA
    size: 4096
    path: /etc/pki/key.pem

- name: Generate CSR
  community.crypto.openssl_csr:
    subject:
      O: CoolBot
      CN: '{{ public_ip }}'
    privatekey_path: /etc/pki/key.pem
    path: /etc/pki/cert.csr

- name: Generate self-signed certificate
  community.crypto.x509_certificate:
    privatekey_path: /etc/pki/key.pem
    csr_path: /etc/pki/cert.csr
    provider: selfsigned
    path: /etc/pki/cert.crt

- name: Copy API location configuration
  template:
    src: api.locations.j2
    dest: /etc/nginx/conf.d/api.locations
    owner: root
    group: root
    mode: 0644

- name: Reload nginx
  shell: docker exec nginx-proxy nginx -s reload