#!/bin/bash

# =================================================================
# –°–∫—Ä–∏–ø—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Supabase –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ NeuroBlogger
# –ê–≤—Ç–æ—Ä: –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä
# –í–µ—Ä—Å–∏—è: 1.0
# –î–∞—Ç–∞: 18.04.2025
# =================================================================

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
if [ -f .env ]; then
    echo -e "${BLUE}[INFO]${NC} –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞..."
    export $(grep -v '^#' .env | xargs)
else
    echo -e "${YELLOW}[WARN]${NC} –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_KEY" ]; then
    echo -e "${RED}[ERROR]${NC} –ù–µ –∑–∞–¥–∞–Ω—ã SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± —É—Å–ø–µ—Ö–µ
success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Supabase
check_supabase_status() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase –ø—Ä–æ–µ–∫—Ç–æ–º NeuroBlogger..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–æ–º–æ—â—å—é curl
    status_code=$(curl -s -o /dev/null -w "%{http_code}" -H "apikey: $SUPABASE_KEY" "$SUPABASE_URL/rest/v1/?apikey=$SUPABASE_KEY")
    
    if [ "$status_code" == "200" ]; then
        success "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
        return 0
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: $status_code"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–∞
execute_query() {
    local query="$1"
    info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–∞: ${query:0:50}..."
    
    response=$(curl -s -X POST \
        -H "apikey: $SUPABASE_KEY" \
        -H "Authorization: Bearer $SUPABASE_KEY" \
        -H "Content-Type: application/json" \
        -d "{\"query\": \"$query\"}" \
        "$SUPABASE_URL/rest/v1/rpc/execute")
    
    echo "$response"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
create_tables() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã posts
    posts_query="CREATE TABLE IF NOT EXISTS posts (
        id SERIAL PRIMARY KEY,
        title TEXT NOT NULL,
        content TEXT NOT NULL,
        author TEXT NOT NULL,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );"
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users
    users_query="CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        username TEXT UNIQUE NOT NULL,
        telegram_id TEXT UNIQUE,
        email TEXT UNIQUE,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        last_login TIMESTAMP WITH TIME ZONE
    );"
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã metrics
    metrics_query="CREATE TABLE IF NOT EXISTS metrics (
        id SERIAL PRIMARY KEY,
        metric_name TEXT NOT NULL,
        metric_value NUMERIC NOT NULL,
        source TEXT,
        timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );"
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
    execute_query "$posts_query"
    execute_query "$users_query"
    execute_query "$metrics_query"
    
    success "–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
backup_data() {
    local backup_dir="./backups"
    local timestamp=$(date +"%Y%m%d%H%M%S")
    local backup_file="${backup_dir}/supabase_backup_${timestamp}.sql"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p "$backup_dir"
    
    info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö Supabase..."
    
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ API Supabase
    # –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, —Ç–∞–∫ –∫–∞–∫ –ø—Ä—è–º–æ–≥–æ API –¥–ª—è –±—ç–∫–∞–ø–∞ –Ω–µ—Ç –≤ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω–æ–º API
    
    echo "-- –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase" > "$backup_file"
    echo "-- –î–∞—Ç–∞: $(date)" >> "$backup_file"
    echo "-- –ü—Ä–æ–µ–∫—Ç: NeuroBlogger" >> "$backup_file"
    
    # –î–æ–±–∞–≤–∏–º –∑–∞–≥–ª—É—à–∫—É –¥–∞–Ω–Ω—ã—Ö
    echo "-- –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ API Supabase" >> "$backup_file"
    
    success "–ó–∞–≥–ª—É—à–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
    warning "–§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ API Supabase"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
check_tables() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü
    tables_query="SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';"
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    result=$(execute_query "$tables_query")
    
    echo "$result" | jq -r '.[]?.table_name // empty' 2>/dev/null || echo "$result"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
add_test_data() {
    info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
    post_query="INSERT INTO posts (title, content, author) 
                VALUES ('–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä–∞', '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.', '–ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä')
                ON CONFLICT DO NOTHING
                RETURNING id;"
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_query="INSERT INTO users (username, telegram_id, email) 
                VALUES ('neurocoder', '12345678', 'test@example.com')
                ON CONFLICT (username) DO NOTHING
                RETURNING id;"
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –º–µ—Ç—Ä–∏–∫–∏
    metric_query="INSERT INTO metrics (metric_name, metric_value, source) 
                 VALUES ('test_execution', 1, 'supabase-integration.sh')
                 RETURNING id;"
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
    post_result=$(execute_query "$post_query")
    user_result=$(execute_query "$user_query")
    metric_result=$(execute_query "$metric_query")
    
    success "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
    echo "–ü–æ—Å—Ç ID: $(echo "$post_result" | jq -r '.[0].id // "–ù–µ —Å–æ–∑–¥–∞–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"')"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: $(echo "$user_result" | jq -r '.[0].id // "–ù–µ —Å–æ–∑–¥–∞–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"')"
    echo "–ú–µ—Ç—Ä–∏–∫–∞ ID: $(echo "$metric_result" | jq -r '.[0].id // "–ù–µ —Å–æ–∑–¥–∞–Ω–∞"')"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
analyze_database() {
    info "–ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç—Ä–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    count_query="SELECT
                 (SELECT COUNT(*) FROM posts) AS posts_count,
                 (SELECT COUNT(*) FROM users) AS users_count,
                 (SELECT COUNT(*) FROM metrics) AS metrics_count;"
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    result=$(execute_query "$count_query")
    
    echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:"
    echo "–ü–æ—Å—Ç–æ–≤: $(echo "$result" | jq -r '.[0].posts_count // "0"')"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $(echo "$result" | jq -r '.[0].users_count // "0"')"
    echo "–ú–µ—Ç—Ä–∏–∫: $(echo "$result" | jq -r '.[0].metrics_count // "0"')"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
main() {
    echo -e "${PURPLE}============================================${NC}"
    echo -e "${PURPLE}üåà –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Supabase ${NC}"
    echo -e "${PURPLE}============================================${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    case "$1" in
        status)
            check_supabase_status
            ;;
        create)
            check_supabase_status && create_tables
            ;;
        backup)
            check_supabase_status && backup_data
            ;;
        check)
            check_supabase_status && check_tables
            ;;
        test)
            check_supabase_status && add_test_data
            ;;
        analyze)
            check_supabase_status && analyze_database
            ;;
        *)
            echo -e "${CYAN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
            echo -e "  $0 status   - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase"
            echo -e "  $0 create   - —Å–æ–∑–¥–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã"
            echo -e "  $0 backup   - —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö"
            echo -e "  $0 check    - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã"
            echo -e "  $0 test     - –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"
            echo -e "  $0 analyze  - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
            ;;
    esac
    
    echo -e "${PURPLE}============================================${NC}"
    echo -e "${PURPLE}üåà –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ${NC}"
    echo -e "${PURPLE}============================================${NC}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
main "$@" 