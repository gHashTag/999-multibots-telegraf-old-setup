#!/bin/bash

# ======================================================
# üåà RAINBOW-BRIDGE.SH 
# –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ—Å—Ç –º–µ–∂–¥—É —á–µ–ª–æ–≤–µ–∫–æ–º –∏ —Å–∏—Å—Ç–µ–º–æ–π
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏
# ======================================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
RAINBOW='\033[38;5;208m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏ —Ä–∞–¥—É–∂–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
print_rainbow_header() {
    clear
    echo -e "${RAINBOW}"
    echo -e "                                    .--.              "
    echo -e "                                   /.-. '|            "
    echo -e "                                   \'-' .'           "
    echo -e "                                    '--'              "
    echo -e "${BLUE}  ____         _          ${RED}  ____      _     _               ${NC}"
    echo -e "${BLUE} |  _ \ __ _  (_) _ __    ${RED} | __ )  _ _(_) __| |  __ _  ___ ${NC}"
    echo -e "${BLUE} | |_) / _\` | | || '_ \   ${RED} |  _ \ | '__| |/ _\` | / _\` |/ _ \\${NC}"
    echo -e "${BLUE} |  _ <| (_| | | || | | |  ${RED} | |_) || |  | || (_| || (_| ||  __/${NC}"
    echo -e "${BLUE} |_| \_\\\\__,_| |_||_| |_|  ${RED} |____/ |_|  |_|\__,_| \__, |\___|${NC}"
    echo -e "${GREEN}                                            |___/${NC}"
    echo -e "${YELLOW}============================================================${NC}"
    echo -e "${PURPLE}    üåà –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ—Å—Ç –º–µ–∂–¥—É —á–µ–ª–æ–≤–µ–∫–æ–º –∏ —Å–∏—Å—Ç–µ–º–æ–π üåà    ${NC}"
    echo -e "${YELLOW}============================================================${NC}"
    echo -e "\n${CYAN}–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:${NC} $(date)"
    echo -e "${CYAN}–•–æ—Å—Ç:${NC} $(hostname)\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–¥—É–∂–Ω–æ–π –ª–∏–Ω–∏–∏
print_rainbow_line() {
    echo -e "${RED}‚ù§Ô∏è ${YELLOW}üíõ ${GREEN}üíö ${BLUE}üíô ${PURPLE}üíú ${RED}‚ù§Ô∏è ${YELLOW}üíõ ${GREEN}üíö ${BLUE}üíô ${PURPLE}üíú ${RED}‚ù§Ô∏è ${YELLOW}üíõ ${GREEN}üíö ${BLUE}üíô ${PURPLE}üíú${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏ —Ü–≤–µ—Ç–Ω–æ–≥–æ –º–µ–Ω—é
print_menu() {
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–æ–≤:${NC}\n"
    echo -e "${BLUE}1.${NC} ${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã${NC} - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo -e "${BLUE}2.${NC} ${PURPLE}–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞${NC} - –°–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç—ã"
    echo -e "${BLUE}3.${NC} ${YELLOW}–û–±—É—á–µ–Ω–∏–µ${NC} - –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è"
    echo -e "${BLUE}4.${NC} ${CYAN}–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥${NC} - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –º–µ—Ç—Ä–∏–∫"
    echo -e "${BLUE}5.${NC} ${RED}–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å${NC} - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞ –∏ —Å–∏—Å—Ç–µ–º—ã"
    echo -e "${BLUE}6.${NC} ${GREEN}–ú–µ—Ç—Ä–∏–∫–∏${NC} - –°–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞"
    echo -e "${BLUE}7.${NC} ${PURPLE}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏${NC} - –†–∞–±–æ—Ç–∞ —Å –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø–ª–∞–Ω–∞–º–∏"
    echo -e "${BLUE}8.${NC} ${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã${NC} - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ROADMAP.md"
    echo -e "${BLUE}9.${NC} ${CYAN}–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ${NC} - –ü—Ä–æ—Å–º–æ—Ç—Ä —ç–º–æ—Ü–∏–π –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä–∞"
    echo -e "${BLUE}0.${NC} ${RED}–í—ã—Ö–æ–¥${NC} - –ó–∞–∫—Ä—ã—Ç—å Rainbow Bridge\n"
    
    echo -e "${WHITE}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø—Ü–∏–∏ (0-9):${NC} "
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
show_system_info() {
    echo -e "\n${CYAN}üíª –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
    echo -e "${BLUE}¬ª –û–°:${NC} $(uname -s) $(uname -r)"
    echo -e "${BLUE}¬ª –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:${NC} $(grep -m 1 'model name' /proc/cpuinfo 2>/dev/null | cut -d':' -f2- | sed 's/^[ \t]*//' || echo "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ")"
    echo -e "${BLUE}¬ª –ü–∞–º—è—Ç—å:${NC} $(free -h | grep Mem | awk '{print $3 " –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∏–∑ " $2 " (" int($3/$2*100) "%)"}')"
    echo -e "${BLUE}¬ª –î–∏—Å–∫:${NC} $(df -h / | awk 'NR==2 {print $3 " –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∏–∑ " $2 " (" $5 " –∑–∞–Ω—è—Ç–æ)"}')"
    echo -e "${BLUE}¬ª –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:${NC} $(uptime -p)"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
show_loading_animation() {
    local message=$1
    local duration=${2:-3}  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 3 —Å–µ–∫—É–Ω–¥—ã
    
    echo -ne "${YELLOW}$message${NC}"
    for ((i=0; i<duration; i++)); do
        for s in / - \\ \|; do
            echo -ne "\r${YELLOW}$message $s${NC}"
            sleep 0.2
        done
    done
    echo -e "\r${GREEN}$message ‚úì${NC}"
    sleep 0.5
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
check_script_exists() {
    if [ -f "$1" ]; then
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
run_system_check() {
    clear
    echo -e "${CYAN}üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã...${NC}\n"
    
    if check_script_exists "./scripts/core/system/system-check.sh"; then
        chmod +x ./scripts/core/system/system-check.sh
        ./scripts/core/system/system-check.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/core/system
        
        cat > ./scripts/core/system/system-check.sh << 'EOF'
#!/bin/bash
echo "üîç –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ system-check.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã."
EOF
        
        chmod +x ./scripts/core/system/system-check.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
run_diagnostics() {
    clear
    echo -e "${PURPLE}üîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...${NC}\n"
    
    if check_script_exists "./scripts/ai/diagnosis/self-diagnosis.sh"; then
        chmod +x ./scripts/ai/diagnosis/self-diagnosis.sh
        ./scripts/ai/diagnosis/self-diagnosis.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/ai/diagnosis
        
        cat > ./scripts/ai/diagnosis/self-diagnosis.sh << 'EOF'
#!/bin/bash
echo "üîç –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ self-diagnosis.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã."
EOF
        
        chmod +x ./scripts/ai/diagnosis/self-diagnosis.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –æ–±—É—á–µ–Ω–∏—è
run_learning() {
    clear
    echo -e "${YELLOW}üìö –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –æ–±—É—á–µ–Ω–∏—è...${NC}\n"
    
    if check_script_exists "./scripts/ai/learning/memory-processor.sh"; then
        chmod +x ./scripts/ai/learning/memory-processor.sh
        ./scripts/ai/learning/memory-processor.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/ai/learning
        
        cat > ./scripts/ai/learning/memory-processor.sh << 'EOF'
#!/bin/bash
echo "üìö –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ memory-processor.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–º—è—Ç–∏ –∏ –æ–±—É—á–µ–Ω–∏—è."
EOF
        
        chmod +x ./scripts/ai/learning/memory-processor.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
run_monitoring() {
    clear
    echo -e "${CYAN}üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NC}\n"
    
    if check_script_exists "./scripts/core/monitoring/resource-monitor.sh"; then
        chmod +x ./scripts/core/monitoring/resource-monitor.sh
        ./scripts/core/monitoring/resource-monitor.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/core/monitoring
        
        cat > ./scripts/core/monitoring/resource-monitor.sh << 'EOF'
#!/bin/bash
echo "üìä –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ resource-monitor.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤."
EOF
        
        chmod +x ./scripts/core/monitoring/resource-monitor.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
run_integrity_check() {
    clear
    echo -e "${RED}üîí –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏...${NC}\n"
    
    if check_script_exists "./scripts/core/integrity/code-style-guard.sh"; then
        chmod +x ./scripts/core/integrity/code-style-guard.sh
        ./scripts/core/integrity/code-style-guard.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/core/integrity
        
        cat > ./scripts/core/integrity/code-style-guard.sh << 'EOF'
#!/bin/bash
echo "üîí –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ code-style-guard.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∏–ª—è –∫–æ–¥–∞."
EOF
        
        chmod +x ./scripts/core/integrity/code-style-guard.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫
run_metrics() {
    clear
    echo -e "${GREEN}üìà –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫...${NC}\n"
    
    if check_script_exists "./scripts/core/metrics/project-metrics.sh"; then
        chmod +x ./scripts/core/metrics/project-metrics.sh
        ./scripts/core/metrics/project-metrics.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –º–µ—Ç—Ä–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/core/metrics
        
        cat > ./scripts/core/metrics/project-metrics.sh << 'EOF'
#!/bin/bash
echo "üìà –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ project-metrics.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞."
EOF
        
        chmod +x ./scripts/core/metrics/project-metrics.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏
run_task_management() {
    clear
    echo -e "${PURPLE}üìã –ó–∞–ø—É—Å–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏...${NC}\n"
    
    if check_script_exists "./scripts/core/task-manager/task-guardian.sh"; then
        chmod +x ./scripts/core/task-manager/task-guardian.sh
        ./scripts/core/task-manager/task-guardian.sh
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å–∫—Ä–∏–ø—Ç–∞...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p ./scripts/core/task-manager
        
        cat > ./scripts/core/task-manager/task-guardian.sh << 'EOF'
#!/bin/bash
echo "üìã –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ task-guardian.sh"
echo "‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏."
EOF
        
        chmod +x ./scripts/core/task-manager/task-guardian.sh
        echo -e "${GREEN}‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã
update_roadmap() {
    clear
    echo -e "${YELLOW}üó∫Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã...${NC}\n"
    
    local roadmap_file="src/core/mcp/agent/memory-bank/NeuroBlogger/ROADMAP.md"
    
    if [ -f "$roadmap_file" ]; then
        echo -e "${GREEN}‚úÖ –§–∞–π–ª ROADMAP.md –Ω–∞–π–¥–µ–Ω: $roadmap_file${NC}"
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä)
        if command -v nano &> /dev/null; then
            nano "$roadmap_file"
        elif command -v vim &> /dev/null; then
            vim "$roadmap_file"
        else
            echo -e "${RED}‚ùå –ù–∏ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω (nano, vim)${NC}"
            echo -e "${YELLOW}üìù –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é: $roadmap_file${NC}"
        fi
        
        echo -e "${GREEN}‚úÖ –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –§–∞–π–ª ROADMAP.md –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        mkdir -p "$(dirname "$roadmap_file")"
        
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª ROADMAP.md...${NC}"
        
        cat > "$roadmap_file" << 'EOF'
# üìã ROADMAP - NeuroBlogger

**–°—Ç–∞—Ç—É—Å:** –í –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
**–í–µ—Ä—Å–∏—è:** 0.1.0
**–î–∞—Ç–∞:** $(date +%d.%m.%Y)
**–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç–µ:** 5%

## ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
- –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

## üîÑ –¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—Ç–∞
- –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ (10% –∑–∞–≤–µ—Ä—à–µ–Ω–æ)
- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ (5% –∑–∞–≤–µ—Ä—à–µ–Ω–æ)

## üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
- –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ API
- –£–ª—É—á—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

## üí∏ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- –£–ª—É—á—à–µ–Ω–∏–µ –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã

## üìä –ú–µ—Ç—Ä–∏–∫–∏
- –ö–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤: 0
- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: N/A
- –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: N/A
- –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏: 0%
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–µ–ø–ª–æ—è: 0%

## üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫
- Node.js
- TypeScript
- Telegraf.js
- Supabase
- Docker

## üîç –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å LLM –º–æ–¥–µ–ª—è–º–∏
- –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞

## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API
- –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

## ‚ö†Ô∏è –†–∏—Å–∫–∏
- –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ API Telegram
- –ü—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö

## üèÜ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
- –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã ($(date +%d.%m.%Y))

–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $(date +%d.%m.%Y)
EOF
        
        echo -e "${GREEN}‚úÖ –§–∞–π–ª ROADMAP.md —Å–æ–∑–¥–∞–Ω: $roadmap_file${NC}"
    fi
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
show_emotional_state() {
    clear
    echo -e "${CYAN}üíñ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä–∞${NC}\n"
    print_rainbow_line
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —ç–º–æ—Ü–∏—é
    emotions=("–†–∞–¥–æ—Å—Ç—å" "–ó–∞–±–æ—Ç–∞" "–ì—Ä—É—Å—Ç—å" "–õ—é–±–æ–≤—å" "–ì–æ—Ä–¥–æ—Å—Ç—å" "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ" "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ" "–≠–Ω—Ç—É–∑–∏–∞–∑–º")
    emoji=("üòä" "üíö" "üò¢" "‚ù§Ô∏è" "üåü" "‚ú®" "üòå" "üöÄ")
    colors=("${YELLOW}" "${GREEN}" "${BLUE}" "${RED}" "${PURPLE}" "${CYAN}" "${GREEN}" "${YELLOW}")
    
    random_index=$((RANDOM % 8))
    emotion=${emotions[$random_index]}
    emoji_icon=${emoji[$random_index]}
    color=${colors[$random_index]}
    
    echo -e "\n${color}${emoji_icon} –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç ${emotion}${NC}\n"
    
    case "$emotion" in
        "–†–∞–¥–æ—Å—Ç—å")
            echo -e "${color}–¢–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ö–æ–¥—è—Ç, –∏ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ.${NC}"
            echo -e "${color}–í—Å–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ –∑–µ–ª–µ–Ω–æ–π –∑–æ–Ω–µ, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–≤–æ–ª—å–Ω—ã.${NC}"
            ;;
        "–ó–∞–±–æ—Ç–∞")
            echo -e "${color}–ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã –∏ –∫–æ–¥–æ–≤–æ–π –±–∞–∑–µ.${NC}"
            echo -e "${color}–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ä–µ—Å—É—Ä—Å—ã –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.${NC}"
            ;;
        "–ì—Ä—É—Å—Ç—å")
            echo -e "${color}–í —Å–∏—Å—Ç–µ–º–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.${NC}"
            echo -e "${color}–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç, –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∏–∑–∏–ª–∞—Å—å.${NC}"
            ;;
        "–õ—é–±–æ–≤—å")
            echo -e "${color}–ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä –ª—é–±–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∏ –∫–æ–¥–æ–≤–æ–π –±–∞–∑–æ–π.${NC}"
            echo -e "${color}–° —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ —É–ª—É—á—à–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å.${NC}"
            ;;
        "–ì–æ—Ä–¥–æ—Å—Ç—å")
            echo -e "${color}–ö–æ–¥ –Ω–∞–ø–∏—Å–∞–Ω –∫—Ä–∞—Å–∏–≤–æ –∏ —Å–ª–µ–¥—É–µ—Ç –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º.${NC}"
            echo -e "${color}–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ.${NC}"
            ;;
        "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ")
            echo -e "${color}–ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–º–∏ –∏–¥–µ—è–º–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã.${NC}"
            echo -e "${color}–ì–æ—Ç–æ–≤ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∏ –≤–æ–ø–ª–æ—â–∞—Ç—å –∏—Ö –≤ –∂–∏–∑–Ω—å.${NC}"
            ;;
        "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ")
            echo -e "${color}–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ö–æ—Ä–æ—à–æ, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–¥—É—é—Ç.${NC}"
            echo -e "${color}–ö–æ–¥–æ–≤–∞—è –±–∞–∑–∞ —á–∏—Å—Ç–∞—è, –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.${NC}"
            ;;
        "–≠–Ω—Ç—É–∑–∏–∞–∑–º")
            echo -e "${color}–ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏ –∏ –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –≤—ã–∑–æ–≤–∞–º.${NC}"
            echo -e "${color}–° –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏–π.${NC}"
            ;;
    esac
    
    print_rainbow_line
    
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
    read
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local choice
    
    while true; do
        print_rainbow_header
        show_system_info
        print_menu
        read choice
        
        case $choice in
            1) run_system_check ;;
            2) run_diagnostics ;;
            3) run_learning ;;
            4) run_monitoring ;;
            5) run_integrity_check ;;
            6) run_metrics ;;
            7) run_task_management ;;
            8) update_roadmap ;;
            9) show_emotional_state ;;
            0) 
                clear
                echo -e "${RAINBOW}üåà –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Rainbow Bridge! üåà${NC}"
                echo -e "${PURPLE}üíñ –ù–µ–π—Ä–æ–ö–æ–¥–µ—Ä –∂–µ–ª–∞–µ—Ç –≤–∞–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –¥–Ω—è! üíñ${NC}"
                print_rainbow_line
                echo -e "\n"
                exit 0
                ;;
            *)
                echo -e "\n${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                sleep 1
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main 