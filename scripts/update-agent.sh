#!/bin/bash

# ===============================================
# üåà –°–ö–†–ò–ü–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ù–ï–ô–†–û–ö–û–î–ï–†–ê –ù–ê –°–ï–†–í–ï–†–ï
# –ê–≤—Ç–æ—Ä: NeuroBlogger AI Agent
# –î–∞—Ç–∞: 18.04.2025
# –í–µ—Ä—Å–∏—è: 1.0
# ===============================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
SSH_KEY="$HOME/.ssh/id_rsa"
SERVER="root@999-multibots-u14194.vm.elestio.app"
PROJECT_PATH="/opt/app/999-multibots-telegraf"
BRANCH="main"
RESTART_CONTAINERS=true
RUN_UPDATE_SCRIPT=true

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    local type=$1
    local message=$2
    local timestamp=$(date "+%Y-%m-%d %H:%M:%S")
    
    case $type in
        "header")
            echo -e "${CYAN}=====================================================${NC}"
            echo -e "${PURPLE}  $message${NC}"
            echo -e "${CYAN}=====================================================${NC}"
            ;;
        "info")
            echo -e "${BLUE}[INFO]${NC} $timestamp - $message"
            ;;
        "success")
            echo -e "${GREEN}[SUCCESS]${NC} $timestamp - $message"
            ;;
        "warning")
            echo -e "${YELLOW}[WARNING]${NC} $timestamp - $message"
            ;;
        "error")
            echo -e "${RED}[ERROR]${NC} $timestamp - $message"
            ;;
        *)
            echo -e "$message"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -h, --help                  –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  -k, --key FILE              –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $SSH_KEY)"
    echo "  -s, --server HOST           –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $SERVER)"
    echo "  -p, --path PATH             –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $PROJECT_PATH)"
    echo "  -b, --branch BRANCH         –í–µ—Ç–∫–∞ Git –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $BRANCH)"
    echo "  -n, --no-restart            –ù–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  -u, --no-update-script      –ù–µ –∑–∞–ø—É—Å–∫–∞—Ç—å update-docker.sh"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                          –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    echo "  $0 -b develop               –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ—Ç–∫—É develop"
    echo "  $0 -n                       –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo ""
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -k|--key)
            SSH_KEY="$2"
            shift 2
            ;;
        -s|--server)
            SERVER="$2"
            shift 2
            ;;
        -p|--path)
            PROJECT_PATH="$2"
            shift 2
            ;;
        -b|--branch)
            BRANCH="$2"
            shift 2
            ;;
        -n|--no-restart)
            RESTART_CONTAINERS=false
            shift
            ;;
        -u|--no-update-script)
            RUN_UPDATE_SCRIPT=false
            shift
            ;;
        *)
            print_message "error" "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è SSH –∫–ª—é—á–∞
if [ ! -f "$SSH_KEY" ]; then
    print_message "error" "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $SSH_KEY"
    print_message "info" "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è."
    exit 1
fi

print_message "header" "üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–†–û–¶–ï–°–° –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ù–ï–ô–†–û–ö–û–î–ï–†–ê"
print_message "info" "–ò—Å–ø–æ–ª—å–∑—É–µ–º SSH –∫–ª—é—á: $SSH_KEY"
print_message "info" "–¶–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: $SERVER"
print_message "info" "–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: $PROJECT_PATH"
print_message "info" "–í–µ—Ç–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $BRANCH"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
print_message "info" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º..."
if ! ssh -i "$SSH_KEY" -o ConnectTimeout=5 "$SERVER" "echo -n" >/dev/null 2>&1; then
    print_message "error" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É!"
    exit 1
fi
print_message "success" "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
print_message "info" "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ update-docker.sh
if [ "$RUN_UPDATE_SCRIPT" = true ]; then
    print_message "info" "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç update-docker.sh –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    ssh -i "$SSH_KEY" "$SERVER" "cd $PROJECT_PATH && git fetch && git checkout $BRANCH && git pull && chmod +x scripts/*.sh && ./scripts/update-docker.sh"
    EXIT_CODE=$?
    
    if [ $EXIT_CODE -ne 0 ]; then
        print_message "error" "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ update-docker.sh (–∫–æ–¥: $EXIT_CODE)"
        print_message "info" "–ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    else
        print_message "success" "–°–∫—Ä–∏–ø—Ç update-docker.sh —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!"
        exit 0
    fi
fi

# –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç update-docker.sh –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
print_message "info" "–í—ã–ø–æ–ª–Ω—è–µ–º —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
print_message "info" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
ssh -i "$SSH_KEY" "$SERVER" "cd $PROJECT_PATH && git fetch && git checkout $BRANCH && git pull"
if [ $? -ne 0 ]; then
    print_message "error" "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    print_message "info" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    exit 1
fi
print_message "success" "–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
print_message "info" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
ssh -i "$SSH_KEY" "$SERVER" "cd $PROJECT_PATH && chmod +x scripts/*.sh"
print_message "success" "–ü—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

# –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
if [ "$RESTART_CONTAINERS" = true ]; then
    print_message "info" "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    print_message "info" "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    ssh -i "$SSH_KEY" "$SERVER" "cd $PROJECT_PATH && docker compose down || docker-compose down"
    if [ $? -ne 0 ]; then
        print_message "warning" "–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    fi
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    print_message "info" "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
    ssh -i "$SSH_KEY" "$SERVER" "docker system prune -f --volumes"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    print_message "info" "–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    ssh -i "$SSH_KEY" "$SERVER" "cd $PROJECT_PATH && docker compose up --build -d || docker-compose up --build -d"
    if [ $? -ne 0 ]; then
        print_message "error" "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        exit 1
    fi
    print_message "success" "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    print_message "info" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    ssh -i "$SSH_KEY" "$SERVER" "docker ps | grep '999-multibots\|nginx-proxy'"
    print_message "info" "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤..."
    ssh -i "$SSH_KEY" "$SERVER" "docker logs --tail 10 999-multibots"
fi

print_message "header" "‚úÖ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ù–ï–ô–†–û–ö–û–î–ï–†–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û"
print_message "info" "–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –∫–æ–¥–∞ –∏–∑ –≤–µ—Ç–∫–∏ $BRANCH —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
if [ "$RESTART_CONTAINERS" = true ]; then
    print_message "info" "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç"
else
    print_message "info" "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ù–ï –±—ã–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ñ–ª–∞–≥ --no-restart)"
fi

print_message "success" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ" 