#!/bin/bash

# ===== üåà –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–æ—Å—Ç–∏–Ω–≥–∞ NeuroBlogger üåà =====
# –ê–≤—Ç–æ—Ä: NeuroBlogger AI
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 18.04.2025
# –í–µ—Ä—Å–∏—è: 1.2

# –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
RESET='\033[0m'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SSH
SSH_KEY="~/.ssh/id_rsa"
SSH_HOST="root@999-multibots-u14194.vm.elestio.app"
PROJECT_DIR="/opt/app/999-multibots-telegraf"

# –§–ª–∞–≥ –¥–ª—è —Ä–µ–∂–∏–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–ª–æ–∫–∞–ª—å–Ω—ã–π –∏–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π)
REMOTE_MODE=true

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏
print_emoji_message() {
    EMOJI=$1
    MESSAGE=$2
    COLOR=$3
    echo -e "${COLOR}${EMOJI} ${MESSAGE}${RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
check_result() {
    if [ $1 -eq 0 ]; then
        print_emoji_message "‚úÖ" "$2" "${GREEN}"
        return 0
    else
        print_emoji_message "‚ùå" "$3" "${RED}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç root
check_root() {
    if [ "$(id -u)" != "0" ]; then
        print_emoji_message "‚ö†Ô∏è" "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ root!" "${RED}"
        return 1
    fi
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSH –∫–ª—é—á–∞
check_ssh_key() {
    if [ ! -f "$SSH_KEY" ]; then
        print_emoji_message "‚ùå" "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY" "${RED}"
        print_emoji_message "‚ÑπÔ∏è" "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–æ–∑–¥–∞–ª–∏ SSH –∫–ª—é—á –∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏" "${YELLOW}"
        return 1
    fi
    
    print_emoji_message "‚úÖ" "SSH –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: $SSH_KEY" "${GREEN}"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
remote_exec() {
    if [ "$REMOTE_MODE" = true ]; then
        ssh -i "$SSH_KEY" "$SSH_HOST" "$1"
        return $?
    else
        eval "$1"
        return $?
    fi
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
print_header() {
    echo -e "\n${PURPLE}=======================================================${RESET}"
    print_emoji_message "üåà" "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–æ—Å—Ç–∏–Ω–≥–∞ NeuroBlogger" "${CYAN}"
    print_emoji_message "ü§ñ" "–í–µ—Ä—Å–∏—è: 1.2" "${CYAN}"
    print_emoji_message "üìÖ" "–î–∞—Ç–∞: $(date '+%d.%m.%Y %H:%M:%S')" "${CYAN}"
    if [ "$REMOTE_MODE" = true ]; then
        print_emoji_message "üåê" "–†–µ–∂–∏–º: –£–¥–∞–ª–µ–Ω–Ω—ã–π (SSH)" "${CYAN}"
    else
        print_emoji_message "üíª" "–†–µ–∂–∏–º: –õ–æ–∫–∞–ª—å–Ω—ã–π" "${CYAN}"
    fi
    echo -e "${PURPLE}=======================================================${RESET}\n"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç
check_dependencies() {
    print_emoji_message "üîç" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç..." "${YELLOW}"
    
    local deps=("ssh" "git" "docker" "docker-compose")
    local missing=()
    
    for dep in "${deps[@]}"; do
        if ! command -v "$dep" &> /dev/null; then
            missing+=("$dep")
        fi
    done
    
    if [ ${#missing[@]} -ne 0 ]; then
        print_emoji_message "‚ùå" "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Ç–∏–ª–∏—Ç—ã: ${missing[*]}" "${RED}"
        return 1
    else
        print_emoji_message "‚úÖ" "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Ç–∏–ª–∏—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" "${GREEN}"
        return 0
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
update_code() {
    print_emoji_message "üì¶" "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." "${YELLOW}"
    
    local cmd="cd $PROJECT_DIR && git stash && git pull"
    remote_exec "$cmd"
    
    if check_result $? "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω" "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"; then
        print_emoji_message "üîÑ" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã..." "${YELLOW}"
        remote_exec "cd $PROJECT_DIR && chmod +x scripts/*.sh"
        check_result $? "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã" "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
        return 0
    else
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker
run_docker_update() {
    print_emoji_message "üêã" "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker..." "${YELLOW}"
    
    local cmd="cd $PROJECT_DIR && ./scripts/update-docker.sh"
    remote_exec "$cmd"
    
    check_result $? "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω" "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker"
    return $?
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
check_server_status() {
    print_emoji_message "üîç" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." "${YELLOW}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    print_emoji_message "üêã" "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." "${BLUE}"
    remote_exec "docker ps"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    print_emoji_message "üìã" "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" "${BLUE}"
    remote_exec "docker logs --tail 10 999-multibots"
    remote_exec "docker logs --tail 10 nginx-proxy"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Nginx
    print_emoji_message "üåê" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Nginx:" "${BLUE}"
    remote_exec "docker exec nginx-proxy nginx -t"
    check_result $? "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞" "–í –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –µ—Å—Ç—å –æ—à–∏–±–∫–∏"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API
    print_emoji_message "ü§ñ" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API..." "${BLUE}"
    API_STATUS=$(remote_exec "curl -s https://api.telegram.org/bot123456:DUMMY_TOKEN/getMe | grep -o 'error_code\|ok'")
    
    if [[ "$API_STATUS" == *"ok"* ]]; then
        print_emoji_message "‚úÖ" "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" "${GREEN}"
    else
        print_emoji_message "‚ö†Ô∏è" "–í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –∫ Telegram API" "${YELLOW}"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ª–æ–∫–∞—Ü–∏–π –≤ Nginx
check_nginx_duplicates() {
    print_emoji_message "üîç" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã..." "${YELLOW}"
    
    local cmd="grep -r 'location' /etc/nginx/conf.d/ | sort | uniq -d"
    local dupes=$(remote_exec "$cmd")
    
    if [ -n "$dupes" ]; then
        print_emoji_message "‚ö†Ô∏è" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –ª–æ–∫–∞—Ü–∏–∏:" "${RED}"
        echo "$dupes"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å Gaia_Kamskaia_bot
        print_emoji_message "üîç" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –±–æ—Ç–æ–º Gaia_Kamskaia_bot..." "${YELLOW}"
        local gaia_conflict=$(remote_exec "grep -r 'Gaia_Kamskaia_bot' /etc/nginx/conf.d/")
        
        if [[ $(echo "$gaia_conflict" | wc -l) -gt 1 ]]; then
            print_emoji_message "‚ö†Ô∏è" "–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç –¥–ª—è –±–æ—Ç–∞ Gaia_Kamskaia_bot!" "${RED}"
            echo "$gaia_conflict"
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            print_emoji_message "üîÑ" "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞..." "${YELLOW}"
            remote_exec "if grep -q 'Gaia_Kamskaia_bot' /etc/nginx/conf.d/bot3.locations; then sed -i 's/Gaia_Kamskaia_bot/ZavaraBot/g' /etc/nginx/conf.d/bot3.locations; fi"
            remote_exec "docker exec nginx-proxy nginx -s reload"
            check_result $? "–ö–æ–Ω—Ñ–ª–∏–∫—Ç —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω" "–ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç"
        else
            print_emoji_message "‚úÖ" "–ö–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å Gaia_Kamskaia_bot –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ" "${GREEN}"
        fi
        
        return 1
    else
        print_emoji_message "‚úÖ" "–î—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ª–æ–∫–∞—Ü–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ" "${GREEN}"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
full_update() {
    print_header
    
    if [ "$REMOTE_MODE" = true ]; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–∞
        check_ssh_key || return 1
    else
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        check_root || return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies || return 1
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
    update_code || return 1
    
    # –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker
    run_docker_update || return 1
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ª–æ–∫–∞—Ü–∏–π –≤ Nginx
    check_nginx_duplicates
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    check_server_status
    
    print_emoji_message "üéâ" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–æ—Å—Ç–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" "${GREEN}"
    echo -e "${PURPLE}=======================================================${RESET}"
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo -e "\n${CYAN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${RESET} $0 [–û–ü–¶–ò–ò]"
    echo -e "\n${YELLOW}–û–ø—Ü–∏–∏:${RESET}"
    echo -e "  ${GREEN}-h, --help${RESET}        –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo -e "  ${GREEN}-l, --local${RESET}       –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ (–±–µ–∑ SSH)"
    echo -e "  ${GREEN}-r, --remote${RESET}      –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo -e "  ${GREEN}-k, --key${RESET} PATH    –£–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ SSH –∫–ª—é—á—É"
    echo -e "  ${GREEN}-c, --check${RESET}       –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    echo -e "\n${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${RESET}"
    echo -e "  $0 --remote                  # –û–±–Ω–æ–≤–∏—Ç—å —Ö–æ—Å—Ç–∏–Ω–≥ —á–µ—Ä–µ–∑ SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo -e "  $0 --local                   # –û–±–Ω–æ–≤–∏—Ç—å —Ö–æ—Å—Ç–∏–Ω–≥ –ª–æ–∫–∞–ª—å–Ω–æ"
    echo -e "  $0 --key ~/.ssh/my_key       # –£–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–π SSH –∫–ª—é—á"
    echo -e "  $0 --check                   # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é\n"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
handle_args() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_help
                exit 0
                ;;
            -l|--local)
                REMOTE_MODE=false
                shift
                ;;
            -r|--remote)
                REMOTE_MODE=true
                shift
                ;;
            -k|--key)
                if [[ -n $2 ]]; then
                    SSH_KEY=$2
                    shift 2
                else
                    print_emoji_message "‚ùå" "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—É—Ç—å –∫ SSH –∫–ª—é—á—É –ø–æ—Å–ª–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ --key" "${RED}"
                    show_help
                    exit 1
                fi
                ;;
            -c|--check)
                print_header
                
                if [ "$REMOTE_MODE" = true ]; then
                    check_ssh_key || exit 1
                fi
                
                check_dependencies || exit 1
                
                if [ "$REMOTE_MODE" = true ]; then
                    check_nginx_duplicates
                    check_server_status
                else
                    print_emoji_message "‚ö†Ô∏è" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ" "${YELLOW}"
                fi
                
                exit 0
                ;;
            *)
                print_emoji_message "‚ùå" "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1" "${RED}"
                show_help
                exit 1
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
handle_args "$@"
full_update
exit $?