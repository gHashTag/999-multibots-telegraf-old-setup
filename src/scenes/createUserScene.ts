import { MyTextMessageContext, MyWizardContext } from '@/interfaces'
import { WizardScene } from 'telegraf/scenes'
import {
  createUser,
  getReferalsCountAndUserData,
  incrementBalance,
} from '@/core/supabase'
import { getPhotoUrl } from '@/handlers/getPhotoUrl'
import { getSubScribeChannel } from '@/handlers'
import { isRussian } from '@/helpers/language'

const BONUS_AMOUNT = 100

const createUserStep = async (ctx: MyTextMessageContext) => {
  console.log('CASE:createUserStep', ctx.from)

  const {
    username,
    id: telegram_id,
    first_name,
    last_name,
    is_bot,
    language_code,
  } = ctx.from

  const finalUsername = username || first_name || telegram_id.toString()
  const photo_url = getPhotoUrl(ctx, 1)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—É /start
  const botNameMatch = ctx.message.text.match(
    /https:\/\/t\.me\/([a-zA-Z0-9_]+)\?start=(\d+)/
  )
  console.log('botNameMatch', botNameMatch)
  let botName = ''
  let startNumber = ''
  console.log('botName', botName)
  console.log('startNumber', startNumber)

  if (botNameMatch) {
    botName = botNameMatch[1]
    startNumber = botNameMatch[2]
  } else if (ctx.message.text.startsWith('/start')) {
    console.log(
      'CASE: üîÑ –ö–æ–º–∞–Ω–¥–∞ /start. botInfo.username:',
      ctx.botInfo.username
    )
    console.log('ctx.message.text', ctx.message.text)
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –±–µ–∑ —Å—Å—ã–ª–∫–∏
    botName = ctx.botInfo.username
    const parts = ctx.message.text.split(' ')
    console.log('parts', parts)
    startNumber = parts.length > 1 ? parts[1] : ''
  }

  ctx.session.inviteCode = startNumber

  const SUBSCRIBE_CHANNEL_ID = getSubScribeChannel(ctx)

  if (ctx.session.inviteCode) {
    console.log('CASE: ctx.session.inviteCode', ctx.session.inviteCode)
    const { count, userData } = await getReferalsCountAndUserData(
      ctx.session.inviteCode.toString()
    )

    ctx.session.inviter = userData.user_id

    const newCount = count + 1
    if (ctx.session.inviteCode) {
      await ctx.telegram.sendMessage(
        ctx.session.inviteCode,
        isRussian(ctx)
          ? `üîó –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ: @${finalUsername}.\nüÜî –£—Ä–æ–≤–µ–Ω—å –∞–≤–∞—Ç–∞—Ä–∞: ${count}\nüéÅ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ ${BONUS_AMOUNT} –∑–≤–µ–∑–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏!\nü§ë –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${
              userData.balance + BONUS_AMOUNT
            }‚≠êÔ∏è `
          : `üîó New user registered through your link: @${finalUsername}.üÜî Avatar level: ${count}\nüéÅ For each friend you invite, you get additional ${BONUS_AMOUNT} stars for generation!\nü§ë Your new balance: ${
              userData.balance + BONUS_AMOUNT
            }‚≠êÔ∏è`
      )
      await incrementBalance({
        telegram_id: ctx.session.inviteCode,
        amount: BONUS_AMOUNT,
      })
      await ctx.telegram.sendMessage(
        `@${SUBSCRIBE_CHANNEL_ID}`,
        `üîó –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ: @${finalUsername}. –ü–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –æ—Ç: @${userData.username}.\nüÜî –£—Ä–æ–≤–µ–Ω—å –∞–≤–∞—Ç–∞—Ä–∞: ${newCount}\nüéÅ –ü–æ–ª—É—á–∏–ª(a) –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ ${BONUS_AMOUNT}‚≠êÔ∏è –Ω–∞ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å.\n–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ!`
      )
    }
  } else {
    console.log('CASE: ctx.session.inviteCode not exists')

    const { count } = await getReferalsCountAndUserData(telegram_id.toString())
    await ctx.telegram.sendMessage(
      `@${SUBSCRIBE_CHANNEL_ID}`,
      `üîó –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ: @${finalUsername}.\nüÜî –£—Ä–æ–≤–µ–Ω—å –∞–≤–∞—Ç–∞—Ä–∞: ${count}.`
    )
  }

  const userData = {
    username: finalUsername,
    telegram_id: telegram_id.toString(),
    first_name: first_name || null,
    last_name: last_name || null,
    is_bot: is_bot || false,
    language_code: language_code || 'en',
    photo_url,
    chat_id: ctx.chat?.id || null,
    mode: 'clean',
    model: 'gpt-4-turbo',
    count: 0,
    aspect_ratio: '9:16',
    balance: 100,
    inviter: ctx.session.inviter || null,
    bot_name: botName,
  }

  await createUser(userData)
  await ctx.reply(
    isRussian(ctx)
      ? '‚úÖ –ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!'
      : '‚úÖ Avatar created successfully!'
  )
  return ctx.scene.enter('subscriptionCheckScene')
}

export const createUserScene = new WizardScene<MyWizardContext>(
  'createUserScene',
  createUserStep
)
