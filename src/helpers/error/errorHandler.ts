import { Telegraf } from 'telegraf'
import { MyContext } from '@/interfaces'
import { logger } from '@/utils/logger'
import { supportRequest } from '@/core/bot'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –æ—à–∏–±–∫–∏ Telegram API
interface TelegramError {
  message?: string
  on?: {
    method?: string
  }
  code?: number
  response?: any
  description?: string
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ Telegram API –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –æ—Ç–∫–∞–∑–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Ç–æ–∫–µ–Ω–∞–º–∏
 * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 */
export const setupErrorHandler = (bot: Telegraf<MyContext>): void => {
  bot.catch((err, ctx) => {
    // –¢–∏–ø–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    const error = err as TelegramError

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const isAuthError = error.message?.includes('401: Unauthorized')

    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å —Ä–∞–∑–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    if (isAuthError) {
      logger.error('üîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram API:', {
        description: 'Telegram API Authorization Error',
        bot_name: ctx?.botInfo?.username || 'unknown',
        error: error.message,
        token_prefix: ctx?.telegram?.token
          ? ctx.telegram.token.substring(0, 10) + '...'
          : 'unknown',
        method: error.on?.method || 'unknown',
        update_id: ctx?.update?.update_id,
      })

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏
      supportRequest('üö® –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram API', {
        bot_name: ctx?.botInfo?.username || 'unknown',
        error: error.message,
        token_prefix: ctx?.telegram?.token
          ? ctx.telegram.token.substring(0, 10) + '...'
          : 'unknown',
        method: error.on?.method || 'unknown',
        time: new Date().toISOString(),
      })
    } else {
      logger.error('‚ùå –û—à–∏–±–∫–∞ Telegram API:', {
        description: 'Telegram API Error',
        bot_name: ctx?.botInfo?.username || 'unknown',
        error: error.message,
        method: error.on?.method || 'unknown',
        update_id: ctx?.update?.update_id,
      })
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º Promise<void> –≤–º–µ—Å—Ç–æ boolean
    return Promise.resolve()
  })
}
